#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Shakespeare Projekt
\end_layout

\begin_layout Author
Lukas Fischer, Lukas Kairies, Robert Terbach, Thomas Döring, Simon Vetter
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Section
Installation- und Startanleitung
\end_layout

\begin_layout Subsection*
Installation
\end_layout

\begin_layout Standard
Das Projekt läuft grundlegend mit dem Interpreter Python der Version 3.
 Falls noch nicht geschehen, kann es mithilfe der Paketverwaltung des Betriebssy
stems installiert werden, z.B.
 durch
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

apt-get install python3
\end_layout

\end_inset

Python 3 benötigt weiterhin folgende vier Erweiterungspakete:
\end_layout

\begin_layout Itemize
Django
\end_layout

\begin_layout Itemize
Panadas
\end_layout

\begin_layout Itemize
Numpy
\end_layout

\begin_layout Itemize
Sklearn
\end_layout

\begin_layout Standard
Diese können zum Beispiel durch folgende Befehle installiert werden
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

pip3 install django
\end_layout

\begin_layout Plain Layout

pip3 install pandas
\end_layout

\begin_layout Plain Layout

pip3 install numpy
\end_layout

\begin_layout Plain Layout

pip3 install sklearn
\end_layout

\end_inset

Anschließend kann mittels
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

git clone https://github.com/
\end_layout

\begin_layout Plain Layout

	DHLeipzig-CurrentTopics-SS2014/shakespeare_project.git
\end_layout

\end_inset

der aktuelle Projektstand heruntergeladen werden.
\end_layout

\begin_layout Subsection*
Startanleitung
\end_layout

\begin_layout Standard
Das Shakespeare Project läuft als Webservice, daher muss vor der Benutzung
 ein Webserver aufgesetzt werden.
 Django bietet in Python 3 einen eingebauten Testserver, der durch den unten
 stehenden Befehl gestartet werden kann.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

python3 src/django/manage.py runserver
\end_layout

\end_inset

Falls nötig, muss die Datenbank vorher migriert werden.
 Notwendig ist es nur, wenn sich die Datenbankstruktur geändert hat, es
 erscheint in diesem Fall eine entsprechende Aufforderung beim Starten des
 Servers in der Konsole.
 Führen Sie dann folgenden Befehl aus.
\begin_inset Newline newline
\end_inset

Anschließend ist der Webservice über 
\emph on
localhost:8000/corpora/corpora 
\emph default
erreichbar
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Für den Produktivbetrieb sollte der Testserver nicht verwendet werden.
 Stattdessen sollte ein Webserver (z.B.
 
\emph on
apache 
\emph default
oder 
\emph on
nginx
\emph default
) eingerichtet werden, der die Django-Funktionialitäten als Skript aufruft.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Nun können die zu untersuchenden Korpora in die Datenbank geladen werden.
 Dazu sollten sie vorher in ein einheitliches, spezifisches Format übertragen
 werden.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<xml>
\end_layout

\begin_layout Plain Layout

   <author>...</author>
\end_layout

\begin_layout Plain Layout

   <year>...</year>
\end_layout

\begin_layout Plain Layout

   <title>...</title>
\end_layout

\begin_layout Plain Layout

   <text>
\end_layout

\begin_layout Plain Layout

      ...
\end_layout

\begin_layout Plain Layout

   </text>
\end_layout

\begin_layout Plain Layout

</xml>
\end_layout

\end_inset

Um diese Arbeit nicht manuell durchführen zu müssen, stehen für die von
 uns genutzten Korporaquellen Parser bereit, mithilfe derer sie automatisch
 in dieses Format übertragen werden können.
 Die Parser liegen dem Projektarchiv bei.
 Durch das Hilfskript 
\emph on
parse_all.py
\emph default
 werden alle unsere Korpora automatisch in das Format übertragen.
\begin_inset Newline newline
\end_inset

Für den Upload der nun formatierten Korpora kann das Webinterface unter
 http://localhost:8000/corpora/corpora genutzt werden.
\end_layout

\begin_layout Section
Entwicklung des Projektes während des Semesters
\end_layout

\begin_layout Subsection
Forschungsfragen
\end_layout

\begin_layout Standard
Zu Beginn des Semesters wählten wid Shakespeare als Thema für unser Projekt.
 Shakespeare erfand in seinen Texten eine Vielzahl neuer Wörter und belegte
 bereits existierende Wörter mit neuen Bedeutungen.
 Als Schwerpunkt unseres Projektes wollten wir untersuchen, welchen Einfluss
 Shakespeare und seine Wortschöpfungen auf die englische Sprache haben,
 sowie in diesem Zusammenhang auch erforschen, welche dieser Wörter am häufigste
n in englischen Texten genutzt wurden und welche Autoren sich am meisten
 von Shakespeare haben beeinflussen lassen.
 Zusammengefasst haben wir uns folgende Fragen gestellt:
\end_layout

\begin_layout Enumerate
Wie beeinflusste Shakespeare die englische Sprache?
\end_layout

\begin_layout Enumerate
Welche Wörter von Shakespeare wurden am meisten verwendet?
\end_layout

\begin_layout Enumerate
Welche Autoren nutzen die meisten Wörter Shakespeares?
\end_layout

\begin_layout Enumerate
In welchen Büchern wurden die meisten Shakespeare-Wörter genutzt?
\end_layout

\begin_layout Subsection
Sammeln der Shakespeare-Wörter
\end_layout

\begin_layout Standard
Um eine Sammlung von Shakespeare-Wörtern zu erstellen, planten wir zunächst
 einen Korpus, bestehend aus Shakespears Texten, mit Referenztexten aus
 dem selben Zeitraum (15.
 und 16.
 Jahrhundert) zu vergleichen, um so die von Shakespeare eingeführten Wörter
 zu erhalten.
 Letztendlich konnten wir diesen aufwendigen Prozess umgehen, indem wir
 die Wörterdatenbank des Oxford English Dictionary (www.oed.com) nach Wörtern
 mit Bezug auf Shakespeare durchsuchten und so eine Sammlung von Shakespeare-Wör
tern erstellen konnten.
 Da Shakespeare nicht nur Wörter, sondern auch Redewendungen in die englische
 Sprache einführte, wollten wir diese zunächst auch in unsere Betrachtung
 einfließen lassen.
 Aufgrund des Mehraufwandes haben wir dies aber nicht umgesetzt.
\end_layout

\begin_layout Subsection
Korpus
\end_layout

\begin_layout Standard
Als Vergleichstexte für die weitere Betrachtung nutzen wir mehrere Korpora,
 bestehend aus Texten, Briefen und schriftlich festgehaltenen Unterhaltungen
 aus den Jahren 1560 bis 1920.
 Ursprünglich wollten wir Projekt Gutenberg (gutenberg.org) und archive.org
 als Quellen für diese Texte zu nutzen.
 Nach genauerer Recherche entschieden wir uns jedoch dagegen, da viele Texte
 dieser Quellen nicht mit Erscheinungsjahren aufgelistet und daher für unsere
 Betrachtung ungeeignet sind.
 Stattdessen bezogen wir die von uns genutzten Korpora von KU Leuven (www.kuleuve
n.be) und University of Oxford Text Archive (www.ota.ahds.ac.uk).
 Insgesamt besteht unsere Korporasammlung aus
\end_layout

\begin_layout Itemize
mehr als 900 Texten von über 400 Autoren
\end_layout

\begin_layout Itemize
mehr als 62 Milllionen Wörtern
\end_layout

\begin_layout Subsection
Entwicklung unseres Webservices
\end_layout

\begin_layout Standard
Während der Bearbeitung unserer Forschungsfragen mit Bezug auf Shakespeare
 haben wir uns entschieden, einen allgemein einsetzbaren Webservice zu entwickel
n und unsere Fragen als einen Anwendungsfall für diesen Webservice zu betrachten.
 So können wir unsere Fragen beantworten und gleichzeitig einen Service
 bieten, der unabhängig von Korpora und Wortliste eine Möglichkeit bietet,
 ähnliche Fragen mit anderem Themenbezug zu beantworten.
 Ähnlich wie Google Ngram Viewer (https://books.google.com/ngrams) soll hier
 die Relevanz der betrachteten Wörter über die Zeit angegeben, aber auch
 mehr Funktionalität geboten werden.
 So lassen sich etwa benutzerdefinierte Korpora verwenden und Fragen in
 Bezug auf andere Eigenschaften der Texte stellen, zum Beispiel bezüglich
 des Autors.
 In diesem Zusammenhang haben wir geplant, neben dem zeitlichen Verlauf
 eine geografische Verteilung mit Bezug auf Veröffentlichungsort und Geburtsort
 des Autors zu visualisieren.
 Da wir hierfür aber keine hinreichende Datenquelle gefunden haben, verwarfen
 wir diese Idee.
\end_layout

\begin_layout Subsubsection
Methodik
\end_layout

\begin_layout Standard
Nachdem die zu untersuchenden Korpora in die Datenbank des Webservice geladen
 wurden, lassen sich über eine Formularseite Textsammlungen anhand von Erscheinu
ngsjahr, Autor und weiteren Eigenschaften erstellen und verschiedene Berechnunge
n auf diesen durchführen.
 Zum Einladen eines Korpus muss dieser mittels eines Parsers zunächst in
 ein einheitliches Format gebracht werden.
 Zum Analysieren der Korpora nutzen wir die aus der Vorlesung bekannten
 Text-Wort-Matritzen mit Tf-idf- bzw.
 Wordcount-Werten.
\end_layout

\begin_layout Section
Probleme und Fehler
\end_layout

\begin_layout Standard
In der Visualisierung unserer Ergebnisse konnten wir aus Zeitgründen bis
 auf einfache Graphen und Tabellen leider keine weiteren Möglichkeiten implement
ieren.
 Wie bereits angesprochen, wollten wir auch geografische Daten in unsere
 Analyse einfließen lassen und darauf aufbauend eine Weltkarte zur Visualisierun
g anbieten.
 Da, wie bereits beschrieben, das Sammeln der geografischen Daten sehr schwierig
 ist, konnten wir diese Visualisierungsart leider auch nicht umsetzen.
\end_layout

\begin_layout Section
Vision unseres Projektes
\end_layout

\begin_layout Standard
Mit unserem Webservice wollen wir eine Möglichkeit bieten, mit möglichst
 wenig Wissen über die Techniken und Methodiken Textkorpora computergestützt
 anhand selbst gewählter Wortlisten zu untersuchen.
 Dafür bietet sich der Browser als Interface gut an.
 Der Service lässt sich leicht mit eigenen Algorithmen zur Analyse erweitern
 und bietet so neben den bestehenden Verfahren die Möglichkeit, ihn nach
 den eigenen Bedürfnissen zu erweitern.
 Unser Service lässt sich sowohl lokal, als auch auf einem Webserver bereitstell
en.
\begin_inset Newline newline
\end_inset

Unsere Ergebnisse zeigen bereits, was mit dem Service möglich ist, allerdings
 sind unsere Ergebnisse zum Teil wenig aussagekräftig.
 An den Graphen ist erkennbar, dass in einigen Zeitabschnitten nur wenige
 Texte vorhanden sind, was unsere Ergebnisse verfälscht.
 Dies kann aber gelöst werden, indem wir mehr Korpora zur Analyse hinzuziehen,
 um so eine bessere Abdeckung der Zeitabschnitte zu gewährleisten.
\end_layout

\end_body
\end_document
