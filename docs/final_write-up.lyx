#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{xcolor}
\usepackage{listings}
\definecolor{lightgray}{rgb}{0.9,0.9,0.9}

\lstset{ %
    backgroundcolor={\color{lightgray}},
    basicstyle={\ttfamily},
    tabsize=4,
    breaklines=true
}
\let\oldenumerate=\enumerate
\def\enumerate{
\oldenumerate
\setlength{\itemsep}{0pt}
}
\let\olditemize=\itemize
\def\itemize{
\olditemize
\setlength{\itemsep}{0pt}
}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding auto
\fontencoding global
\font_roman libertine
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing double
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\boxbgcolor #dedede
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Shakespeare Projekt
\end_layout

\begin_layout Author
Thomas Döring, Lukas Fischer, Lukas Kairies, Robert Terbach, Simon Vetter
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Section
Installations- und Startanleitung
\end_layout

\begin_layout Subsection*
Installation
\end_layout

\begin_layout Standard
Das Projekt läuft grundlegend mit dem Interpreter Python der Version 3.
 Falls noch nicht geschehen, kann es mithilfe der Paketverwaltung des Betriebssy
stems installiert werden, z.B.
 durch
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

apt-get install python3
\end_layout

\end_inset

Python 3 benötigt weiterhin folgende vier Erweiterungspakete:
\end_layout

\begin_layout Itemize
Django
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "https://www.djangoproject.com/"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Pandas
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://pandas.pydata.org/"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Numpy
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://www.numpy.org/"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Scikit-Learn
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://scikit-learn.org/"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Diese können zum Beispiel durch folgende Befehle installiert werden
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

pip3 install django
\end_layout

\begin_layout Plain Layout

pip3 install pandas
\end_layout

\begin_layout Plain Layout

pip3 install numpy
\end_layout

\begin_layout Plain Layout

pip3 install sklearn
\end_layout

\end_inset

Anschließend kann mittels
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

git clone https://github.com/
\end_layout

\begin_layout Plain Layout

	DHLeipzig-CurrentTopics-SS2014/shakespeare_project.git
\end_layout

\end_inset

der aktuelle Projektstand heruntergeladen werden.
\end_layout

\begin_layout Subsection*
Startanleitung
\end_layout

\begin_layout Standard
Das Shakespeare Project läuft als Webservice, daher muss vor der Benutzung
 ein Webserver aufgesetzt werden.
 Django bietet in Python 3 einen eingebauten Testserver, der durch den unten
 stehenden Befehl gestartet werden kann:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

python3 src/django/manage.py runserver
\end_layout

\end_inset

Vor dem ersten Start, muss die Datenbank migriert werden.
 Notwendig ist es sonst nur, wenn sich die Datenbankstruktur geändert hat,
 es erscheint in diesem Fall eine entsprechende Aufforderung beim Starten
 des Servers in der Konsole.
 Führen Sie dazu folgenden Befehl aus (der Server muss danach neu gestartet
 werden):
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

python3 src/django/manage.py syncdb
\end_layout

\end_inset

Anschließend ist der Webservice über 
\family typewriter
localhost:8000/corpora/corpora
\family default
\emph on
 
\emph default
erreichbar.
\end_layout

\begin_layout Standard
Für den Produktivbetrieb sollte der Testserver nicht verwendet werden.
 Stattdessen sollte ein Webserver (z.B.
 
\emph on
apache 
\emph default
oder 
\emph on
nginx
\emph default
) eingerichtet werden, der die Django-Funktionialitäten als Skript aufruft.
\end_layout

\begin_layout Standard
Nun können die zu untersuchenden Corpora in die Datenbank geladen werden.
 Dazu sollten sie vorher in das folgende einheitliche Format übertragen
 werden:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=XML"
inline false
status open

\begin_layout Plain Layout
\paragraph_spacing single

<xml>
\end_layout

\begin_layout Plain Layout
\paragraph_spacing single

   <author>...</author>
\end_layout

\begin_layout Plain Layout
\paragraph_spacing single

   <year>...</year>
\end_layout

\begin_layout Plain Layout
\paragraph_spacing single

   <title>...</title>
\end_layout

\begin_layout Plain Layout
\paragraph_spacing single

   <text>
\end_layout

\begin_layout Plain Layout
\paragraph_spacing single

      ...
\end_layout

\begin_layout Plain Layout
\paragraph_spacing single

   </text>
\end_layout

\begin_layout Plain Layout
\paragraph_spacing single

</xml>
\end_layout

\end_inset

Um diese Arbeit nicht manuell durchführen zu müssen, stehen für die von
 uns genutzten Corporaquellen Parser bereit, mithilfe derer sie automatisch
 in dieses Format übertragen werden können.
 Die Parser liegen dem Projektarchiv bei.
 Durch das Hilfskript 
\family typewriter
parse_all.py
\family default
 werden alle unsere Corpora automatisch in das Format übertragen.
 Für den Upload der nun formatierten Corpora kann das Webinterface unter
 
\family typewriter
http://localhost:8000/corpora/corpora
\family default
 genutzt werden.
\end_layout

\begin_layout Section
Entwicklung des Projektes während des Semesters
\end_layout

\begin_layout Subsection
Forschungsfragen
\end_layout

\begin_layout Standard
Zu Beginn des Semesters wählten wir Shakespeare als Thema für unser Projekt.
 Shakespeare erfand in seinen Texten eine Vielzahl neuer Wörter und belegte
 bereits existierende Wörter mit neuen Bedeutungen.
 Als Schwerpunkt unseres Projektes wollten wir untersuchen, welchen Einfluss
 Shakespeare und seine Wortschöpfungen auf die englische Sprache haben,
 sowie in diesem Zusammenhang auch erforschen, welche dieser Wörter am häufigste
n in englischen Texten genutzt wurden und welche Autoren sich am meisten
 von Shakespeare haben beeinflussen lassen.
 Zusammengefasst haben wir uns folgende Fragen gestellt:
\end_layout

\begin_layout Enumerate
Wie beeinflusste Shakespeare die englische Sprache?
\end_layout

\begin_layout Enumerate
Welche Wörter von Shakespeare wurden am meisten verwendet?
\end_layout

\begin_layout Enumerate
Welche Autoren nutzen die meisten Wörter Shakespeares?
\end_layout

\begin_layout Enumerate
In welchen Büchern wurden die meisten Shakespeare-Wörter genutzt?
\end_layout

\begin_layout Subsection
Sammeln der Shakespeare-Wörter
\end_layout

\begin_layout Standard
Um eine Sammlung von Shakespeare-Wörtern zu erstellen, planten wir zunächst
 einen Corpus, bestehend aus Shakespeares Texten, mit Referenztexten aus
 dem selben Zeitraum (15.
 und 16.
 Jahrhundert) zu vergleichen, um so die von Shakespeare eingeführten Wörter
 zu erhalten.
 Letztendlich konnten wir diesen aufwendigen Prozess umgehen, indem wir
 die Wörterdatenbank des Oxford English Dictionary
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://www.oed.com"

\end_inset


\end_layout

\end_inset

 nach Wörtern mit Bezug auf Shakespeare durchsuchten und so eine Sammlung
 von Shakespeare-Wörtern erstellen konnten.
 Da Shakespeare nicht nur Wörter, sondern auch Redewendungen in die englische
 Sprache einführte, wollten wir diese zunächst auch in unsere Betrachtung
 einfließen lassen.
 Aufgrund des Mehraufwandes haben wir dies aber nicht umgesetzt.
\end_layout

\begin_layout Subsection
Corpus
\end_layout

\begin_layout Standard
Als Vergleichstexte für die weitere Betrachtung nutzen wir mehrere Corpora,
 bestehend aus Texten, Briefen und schriftlich festgehaltenen Unterhaltungen
 aus den Jahren 1560 bis 1920.
 Ursprünglich wollten wir Projekt Gutenberg
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "https://www.gutenberg.org"

\end_inset


\end_layout

\end_inset

 und archive.org als Quellen für diese Texte zu nutzen.
 Nach genauerer Recherche entschieden wir uns jedoch dagegen, da viele Texte
 dieser Quellen nicht mit Erscheinungsjahren aufgelistet und daher für unsere
 Betrachtung ungeeignet sind.
 Ausserdem sind die Texte in Projekt Gutenberg nicht einheitlich formatiert,
 sie haben sowohl vor, als auch nach dem Text Abschnitte, die den Text,
 den Autor, eine Versionsgeschichte, Lizenzdetails, Anmerkungen der Projekt
 Gutenberg Mitarbeiter, sowie andere verschiedene Informationen beschreiben.
 Leider sind auch nicht Textautor, Jahr und Titel einheitlich gestaltet,
 sodass jeder Text hätte einzeln manuell bearbeitet hätte werden müssen.
 Stattdessen bezogen wir die von uns genutzten Corpora von der 
\shape italic
Katholieke Universiteit Leuven
\shape default

\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "https://www.kuleuven.be"

\end_inset


\end_layout

\end_inset

 und dem 
\shape italic
University of Oxford Text Archive
\shape default

\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://www.ota.ahds.ac.uk"

\end_inset


\end_layout

\end_inset

.
 Insgesamt besteht unsere Corporasammlung aus mehr als 900 Texten von über
 400 Autoren mit insgesamt mehr als 62 Milllionen Wörtern.
 Die folgenden Corpora wurden gewählt, weil sie eine große Textanzahl haben
 sowie in für uns interessanten Zeitabschnitten liegen:
\end_layout

\begin_layout Itemize
CLMET - The Corpus of Late Modern English Texts, version 3.0
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "https://perswww.kuleuven.be/~u0044428/clmet3_0.htm"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
CEN - The Corpus of English Novels
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "https://perswww.kuleuven.be/~u0044428/cen.htm"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The English language of the north-west in the late Modern English period:
 a Corpus of late 18c Prose
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://www.ota.ahds.ac.uk/desc/2468"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
CED - A Corpus of English Dialogues 1560-1760
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://www.ota.ahds.ac.uk/desc/2507"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
The Lampeter Corpus of Early Modern English Tracts
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "http://www.ota.ahds.ac.uk/desc/3193"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Entwicklung unseres Webservices
\end_layout

\begin_layout Subsubsection
Grundidee
\end_layout

\begin_layout Standard
Während der Bearbeitung unserer Forschungsfragen mit Bezug auf Shakespeare
 haben wir uns entschieden, einen allgemein einsetzbaren Webservice zu entwickel
n und unsere Fragen als einen Anwendungsfall für diesen Webservice zu betrachten.
 So können wir unsere Fragen beantworten und gleichzeitig einen Service
 bieten, der unabhängig von Corpora und Wortliste eine Möglichkeit bietet,
 ähnliche Fragen mit anderem Themenbezug zu beantworten.
 Ähnlich wie in Google Ngram Viewer
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
target "https://books.google.com/ngrams"

\end_inset


\end_layout

\end_inset

 soll hier die Relevanz der betrachteten Wörter über die Zeit angegeben,
 aber auch mehr Funktionalität geboten werden.
 So lassen sich etwa eigene Corpora verwenden und Fragen in Bezug auf andere
 Eigenschaften der Texte stellen, zum Beispiel bezüglich des Autors.
 Da Python sich in wissenschaftlicher Datenverarbeitung momentan durch Bibliothe
ken wir 
\family typewriter
pandas
\family default
 und 
\family typewriter
scikit-learn
\family default
 einen Namen macht, ermöglicht die Verwendung dieser bekannten Pakete auch
 Anderen einfach eigene Funktionen zu implementieren und dem Funktionsumfang
 hinzuzufügen.
 Mit einem Webservice wäre man dann auch in der Lage auf einfachem Weg interakti
ve Ergebnisse der Öffentlichkeit zur Verfügung zu stellen.
\end_layout

\begin_layout Standard
In diesem Zusammenhang haben wir geplant, neben dem zeitlichen Verlauf eine
 geografische Verteilung mit Bezug auf Veröffentlichungsort und Geburtsort
 des Autors zu visualisieren.
 Da wir hierfür aber keine hinreichende Datenquelle gefunden haben, verwarfen
 wir diese Idee.
\end_layout

\begin_layout Subsubsection
Methodik
\end_layout

\begin_layout Standard
Um Komfortabel und mit benutzerdefinierten Bedingungen performant auf die
 Corpora zugreifen zu können entschieden wir uns die Texte in einer Datenbank
 zu hinterlegen.
 Gleichzeitig wollten wir in der Lage sein auf einfache Art und Weise Ergebnisse
 zu visualisieren.
 Da ansprechende Visualisierungen momentan stark im Web verwendet werden
 entschieden wir uns auch auf entsprechende JavaScript-Bibliotheken zu setzen
 und mit einem Webframework zu arbeiten.
 Als dritter Baustein war eine Bedingung die aus dem Seminar bekannten Text-Wort
-Matrizen verwenden zu können beziehungsweise die 
\family typewriter
pandas
\family default
-Bibliothek und die TF-IDF funktionalität von 
\family typewriter
scikit-learn
\family default
.
 Die Schnittstelle dieser Überlegungen erfüllt das Python-Webframework 
\family typewriter
django
\family default
 ideal.
 Django abstrahiert komplexe SQL-Abfragen und versteckt sie hinter Python-Code.
 So können zum Beispiel alle Texte nach Erscheinungsjahr sortiert, oder
 gefiltert abgerufen werden.
 
\end_layout

\begin_layout Standard
Da wir mehrere verschieden formatierte Corpora verwenden mussten wir dafür
 sorgen, dass wir sie gleichartig in unser Datenmodell übertragen können.
 Wie oben beschrieben haben wir dafür ein eigenes einfaches XML-Format entworfen
 und Parser für die einzelnen Corpora geschrieben, die sie in das Format
 umwandeln können.
 Alternativ hätten wir Parser schreiben können, die jeden Corpus direkt
 in die Datenbank einpflegen.
 Da jedoch das interne Datenbankmodell komplexer ist als das XML-Format
 konnten wir durch ein einheitliches Vorformat sicherstellen, dass alle
 Texte auf gleichem Weg in die Datenbank überführt werden.
\end_layout

\begin_layout Standard
Je nach Bedarf der durchzuführenden Rechnungen kann nun direkt auf den das
 Datenmodell darstellenden Pythonobjekten gearbeitet werden oder zum Beispiel
 
\family typewriter
pandas-DataFrames
\family default
 verwendet werden.
\end_layout

\begin_layout Section
Probleme und Fehler
\end_layout

\begin_layout Standard
Für uns alle sind Fragestellungen aus einem geisteswissenschaftlichen Gebiet
 Neuland, es fiel uns schon zu Beginn schwer zu entscheiden, was wir für
 Fragen an den Corpus stellen könnten, noch schwerer allerdings zu entscheiden,
 wie sinnvoll diese sind und wie schwer zu beantworten.
 Auch die verwendeten Technologien waren ziemlich neu für uns, so zum Beispiel
 die vielfältigen Funktionen von 
\family typewriter
pandas
\family default
, oder die Visualisierung mit JavaScript.
 So haben das Erlernen von und der Umgang mit Django, pandas und den anderen
 Bibliotheken recht viel Zeit in anspruch genommen, zumal sich neue Probleme
 immer wieder im Verlauf des Projektes zeigten.
 Ein großes Problem ist nach wie vor die Performanz der Applikation.
 Wir entschieden bewusst unsere Daten in einer Datenbank zu speichern, damit
 wir nicht im Vorfeld jeder Berechnung die kompletten Datensätze neu einlesen
 mussten.
 Dabei mussten wir lernen, wie man mit den Daten performant umgehen kann.
 Die Datenbank speichert die Modelle in ganz herkömlicher Art als Tabellen
 mit Textfeldern, ein Abruf der Daten in die zugehörigen Pythonobjekte nimmt
 jedoch viel Zeit in Anspruch.
 So mussten wir möglichst viel Arbeit die Datenbank mit SQL-Anfragen erledigen
 lassen und die gefilterten Daten möglichst als einfache Datentypen, wie
 String und Listen verwenden.
 
\end_layout

\begin_layout Standard
Wir unterschätzten ausserdem sehr den Aufwand, der zum Aufbau einer geeigneten
 Datenbasis nötig ist.
 Wie bereits beschrieben konnten wir nicht 
\shape italic
einfach
\shape default
 Projekt Gutenberg Texte verwenden, sondern mussten andere Corpora verwenden.
 Dadurch, dass wir mehrere Corpora gleichzeitig verwenden und mangels Fachwissen
 wenig Kontrolle über die enthaltenen Texte haben, sind unsere Ergebnisse
 an Qualität sicher streitbar.
 Ebendieser Aufwand führte auch dazu, dass wir die spannendste unserer Fragen
 verwerfen mussten.
 Eigentlich wollten wir geographisch nachverfolgen wie sich Wörter ausgebreitet
 haben.
 Lässt sich also im Verlauf der Zeit eine größer werdene Verbreitung eines
 Wortes verfolgen? Dazu hätten wir Orte an denen die Autoren sich aufgehalten
 haben mit Zeitspannen in den Daten haben müssen.
 Diese Daten für die Autoren von Hand einzufügen wäre sehr Aufwändig gewesen,
 noch schwerer allerdings sind die Daten zu bekommen, die Namen sind oft
 nicht eindeutig.
\end_layout

\begin_layout Standard
In der Visualisierung unserer Ergebnisse konnten wir aus Zeitgründen bis
 auf einfache Graphen und Tabellen leider keine weiteren Möglichkeiten implement
ieren.
\end_layout

\begin_layout Section
Vision unseres Projektes
\end_layout

\begin_layout Standard
Unsere Ergebnisse zeigen bereits, was mit dem Service möglich ist, allerdings
 sind unsere Ergebnisse zum Teil wenig aussagekräftig.
 An den Graphen ist erkennbar, dass in einigen Zeitabschnitten nur wenige
 Texte vorhanden sind, was unsere Ergebnisse verfälscht.
 Um dies zu Lösen muss man einen hochwertigen Corpus verwenden, der den
 gewünschten Zeitraum in stabiler Qualität abbildet.
 
\end_layout

\begin_layout Standard
Mit unserem Webservice wollen wir eine Möglichkeit bieten, mit wenig Wissen
 über die Techniken und Methodiken TextCorpora computergestützt anhand selbst
 gewählter Wortlisten zu untersuchen.
 Dafür bietet sich der Browser als Interface gut an.
 Der Service lässt sich leicht mit eigenen Algorithmen zur Analyse erweitern
 und bietet so neben den bestehenden Verfahren die Möglichkeit, ihn nach
 den eigenen Bedürfnissen zu erweitern.
 Unser Service lässt sich sowohl lokal, als auch auf einem Webserver bereitstell
en, also sowohl zum iterativen Erforschen für sich selbst, als auch als
 Platform zur Präsentation seiner Ergebnisse.
 Insbesondere ist auch die Verwendung eigener Corpora für eigene Fragen
 interessant.
\end_layout

\begin_layout Standard
Der Webserver erlaubt nicht nur Betrachtung der berechneten Ergebnisse,
 es kann ebenso auch Textseiten geben, die die Forschung beschreiben und
 analysieren.
 Solche Möglichkeiten wissenschaftliche Ergebnisse in ansprechender und
 leicht verfügbarer Form zur Verfügung zu stellen kann helfen die Arbeiten
 leichter für Laien verständlich zu machen.
 Die bisherige Praxis Artikel in Fachzeitschriften zu publizieren stellt
 für Menschen ohne wissenschaftlichen Hintergrund, oder aus anderen Feldern
 oft eine hohe Hürde dar.
 Auch um Nachwuchs für spezielle Themengebiete zu begeistern kann der Service
 hilfreich sein.
 Momentan muss man seinen zur Berechnung verwendeten Corpus fest einstellen
 und bekommt darauf Ergebnisse berechnet.
 Analog zu dem Google NGram Viewer wäre es wünschenswert, wenn man die Daten
 auch explorativ betrachten kann.
 Beispielsweise während der Anzeige des Ergebnisses auf einen Zeitabschnitt
 genauer eingehen, oder Gruppen von Texten zur Berechnung hinzufügen kann.
 Auch verschiedene Textmengen miteinander vergleichen zu können scheint
 eine interessante Erweiterung des Funktionsumfangs.
 
\end_layout

\begin_layout Standard
Das Projekt bietet dementsprechend noch viel Raum für Weiterentwicklung,
 sowohl auf inhaltlicher Seite, wo weitere Algorithmen implementiert werden
 können, als auch in technischer Hinsicht, moderne Webtechnologien ausnutzend
 um die Datenbetrachtung zu verbessern und interaktives Untersuchen zu ermöglich
en.
\end_layout

\end_body
\end_document
